(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{406:function(t,a,v){"use strict";v.r(a);var _=v(45),s=Object(_.a)({},(function(){var t=this,a=t.$createElement,v=t._self._c||a;return v("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[v("h1",{attrs:{id:"微服务架构基础"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#微服务架构基础"}},[t._v("#")]),t._v(" 微服务架构基础")]),t._v(" "),v("h2",{attrs:{id:"传统单体应用架构的缺点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#传统单体应用架构的缺点"}},[t._v("#")]),t._v(" 传统单体应用架构的缺点")]),t._v(" "),v("ol",[v("li",[v("p",[t._v("应用复杂度增加导致难以维护")]),t._v(" "),v("ul",[v("li",[t._v("一个简单的应用会随着业务的发展而逐渐变大，开发团队中的单个开发者很难进行二次开发或维护。")])])]),t._v(" "),v("li",[v("p",[t._v("易造成系统资源浪费")]),t._v(" "),v("ul",[v("li",[t._v("单体架构只有一个包含所有功能的WAR包，用负载均衡的方式不仅扩展了所需的服务，而且其他不需要扩展的服务也进行了相应的扩展，这样就导致了资源的浪费。")])])]),t._v(" "),v("li",[v("p",[t._v("影响开发效率")]),t._v(" "),v("ul",[v("li",[t._v("当一个应用越大时，启动时间就会越长，这样就会严重影响开发效率。")])])]),t._v(" "),v("li",[v("p",[t._v("应用可靠性低")]),t._v(" "),v("ul",[v("li",[t._v("单体应用架构在运行时，任何一个模块中出现了bug，可能会导致整个进程崩溃。")])])]),t._v(" "),v("li",[v("p",[t._v("不利于技术的更新")]),t._v(" "),v("ul",[v("li",[t._v("单体应用架构一旦选定使用某些技术，后期的开发和扩展都是在这些技术的基础上实现的。如果需要更改某种技术，则可能需要将整个应用全部重新开发，投入成本非常大。")])])])]),t._v(" "),v("h2",{attrs:{id:"什么是微服务"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是微服务"}},[t._v("#")]),t._v(" 什么是微服务")]),t._v(" "),v("p",[t._v("在传统单体应用架构的基础上，将系统按照功能拆分为更加细粒度的服务，所拆分的每一个服务\n都是一个独立的应用，这些应用对外提供公共的API，可以独立承担对外服务的职责，这些服务\n被称为微服务。")]),t._v(" "),v("h2",{attrs:{id:"什么是微服务架构"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#什么是微服务架构"}},[t._v("#")]),t._v(" 什么是微服务架构")]),t._v(" "),v("p",[t._v("微服务架构是一种架构风格和架构思想，它是围绕微服务构建的一系列体系结构（包括开发、测试、部署等）。")])])}),[],!1,null,null,null);a.default=s.exports}}]);