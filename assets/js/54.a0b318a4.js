(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{433:function(t,n,r){"use strict";r.r(n);var e=r(45),s=Object(e.a)({},(function(){var t=this,n=t.$createElement,r=t._self._c||n;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"控制反转实现方式"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#控制反转实现方式"}},[t._v("#")]),t._v(" 控制反转实现方式")]),t._v(" "),r("p",[t._v("当前比较流行的实现方式有两种： 依赖注入和依赖查找")]),t._v(" "),r("ol",[r("li",[r("p",[t._v("依赖注入：Spring 容器在创建被调用者的实例时，会自动将调用者需要的对象实例注入给调用者，这样，调用者通过 Spring 容器获得被调用者实例")])]),t._v(" "),r("li",[r("p",[t._v("依赖查找：Spring 容器中的受控对象通过容器的API来查找自己所依赖的资源和协作对象")])])])])}),[],!1,null,null,null);n.default=s.exports}}]);