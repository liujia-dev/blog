(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{308:function(t,e,s){t.exports=s.p+"assets/img/threelevel.a4b11ce9.png"},418:function(t,e,s){"use strict";s.r(e);var r=s(45),a=Object(r.a)({},(function(){var t=this,e=t.$createElement,r=t._self._c||e;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h2",{attrs:{id:"什么是三层架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#什么是三层架构"}},[t._v("#")]),t._v(" 什么是三层架构")]),t._v(" "),r("p",[t._v("标准的三层架构包括视图层（View），业务逻辑层（Service），数据访问层（DAO）。")]),t._v(" "),r("ol",[r("li",[t._v("视图层：即View层，负责接收客户端请求并显示返回的请求数据。")]),t._v(" "),r("li",[t._v("业务层：即Service层，负责业务逻辑处理。")]),t._v(" "),r("li",[t._v("数据访问层：即DAO层，负责数据持久化，对数据库表进行增删改查等操作。")])]),t._v(" "),r("h2",{attrs:{id:"为什么采用三层架构"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#为什么采用三层架构"}},[t._v("#")]),t._v(" 为什么采用三层架构")]),t._v(" "),r("p",[t._v("使用三层架构的目的在于层间解耦。在三层架构设计中，采用的是面向抽象编程。\n上层对下层的调用，是通过接口实现的。\n下层对上层的真正服务提供者，是下层接口的实现类。\n服务标准（接口）是相同的，服务提供者可以（实现类）更换。")]),t._v(" "),r("p",[r("img",{attrs:{src:s(308),alt:"三层架构"}})])])}),[],!1,null,null,null);e.default=a.exports}}]);