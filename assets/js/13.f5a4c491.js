(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{379:function(e,t,r){e.exports=r.p+"assets/img/springwebmvc.d3bc9b0b.png"},427:function(e,t,r){"use strict";r.r(t);var a=r(45),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"spring-mvc概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc概述"}},[e._v("#")]),e._v(" Spring MVC概述")]),e._v(" "),a("p",[e._v("Spring Web MVC 框架简称Spring MVC。\nSpring MVC 是基于Servlet API 来构建的，要使用Spring MVC 功能，\n需要添加spring-webmvc模块。")]),e._v(" "),a("h2",{attrs:{id:"spring-mvc流程图"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc流程图"}},[e._v("#")]),e._v(" Spring MVC流程图")]),e._v(" "),a("p",[a("img",{attrs:{src:r(379),alt:"springmvc"}})]),e._v(" "),a("h2",{attrs:{id:"springmvc执行流程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#springmvc执行流程"}},[e._v("#")]),e._v(" SpringMVC执行流程")]),e._v(" "),a("ol",[a("li",[e._v("用户发送请求至前端控制器DispatcherServlet。")]),e._v(" "),a("li",[e._v("DispatcherServlet收到请求调用处理器映射器HandlerMapping。")]),e._v(" "),a("li",[e._v("HandlerMapping根据请求url找到适合的处理器，生成处理器执行链HandlerExecutionChain返回给DispatcherServlet。")]),e._v(" "),a("li",[e._v("DispatcherServlet根据处理器Handler获取处理器适配器HandlerAdapter执行HandlerAdapter处理一系列的操作，如：参数封装，数据格式转换，数据验证等操作。")]),e._v(" "),a("li",[e._v("执行处理器页面控制器Controller。")]),e._v(" "),a("li",[e._v("Controller执行完成返回ModelAndView")]),e._v(" "),a("li",[e._v("HandlerAdapter将Controller执行结果ModelAndView返回到DispatcherServlet")]),e._v(" "),a("li",[e._v("DispatcherServlet将ModelAndView传给ViewReslover视图解析器")]),e._v(" "),a("li",[e._v("ViewReslover解析后返回具体View")]),e._v(" "),a("li",[e._v("DispatcherServlet对View进行渲染，将模型数据model填充至View。")]),e._v(" "),a("li",[e._v("DispatcherServlet响应用户。")])]),e._v(" "),a("h2",{attrs:{id:"dispatcherservlet-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dispatcherservlet-概述"}},[e._v("#")]),e._v(" DispatcherServlet 概述")]),e._v(" "),a("p",[e._v("DispatcherServlet 为所有的请求处理提供调度。\nDispatcherServlet 需要根据Servlet规范使用Java配置或在web.xml中进行声明和映射。\nDispatcherServlet 需要一个WebApplicationContext用于其自己的配置。")]),e._v(" "),a("h2",{attrs:{id:"spring-mvc-常用注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring-mvc-常用注解"}},[e._v("#")]),e._v(" Spring MVC 常用注解")]),e._v(" "),a("h3",{attrs:{id:"controller"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#controller"}},[e._v("#")]),e._v(" @Controller")]),e._v(" "),a("p",[e._v("用于返回到指定页面。")]),e._v(" "),a("h3",{attrs:{id:"restcontroller"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#restcontroller"}},[e._v("#")]),e._v(" @RestController")]),e._v(" "),a("p",[e._v("用于返回JSON格式数据。")]),e._v(" "),a("h3",{attrs:{id:"getmapping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#getmapping"}},[e._v("#")]),e._v(" @GetMapping")]),e._v(" "),a("p",[e._v("@GetMapping用于将HTTP get请求映射到特定处理程序的方法注解。")]),e._v(" "),a("h3",{attrs:{id:"postmapping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#postmapping"}},[e._v("#")]),e._v(" @PostMapping")]),e._v(" "),a("p",[e._v("@PostMapping用于将HTTP post请求映射到特定处理程序的方法注解。")]),e._v(" "),a("h3",{attrs:{id:"modelattribute"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#modelattribute"}},[e._v("#")]),e._v(" @ModelAttribute")]),e._v(" "),a("ol",[a("li",[e._v("绑定请求参数到命令对象：放在功能处理方法的入参上时，用于将多个请求参数绑定到一个命令对象，从而简化绑定流程，而且自动暴露为模型数据用于视图页面展示时使用")]),e._v(" "),a("li",[e._v("暴露 @RequestMapping 方法返回值为模型数据：放在功能处理方法的返回值上时，是暴露功能处理方法的返回值为模型数据，用于视图页面展示时使用")]),e._v(" "),a("li",[e._v("暴露表单引用对象为模型数据：放在处理器的一般方法（非功能处理方法）上时，是为表单准备要展示的表单引用对象，如注册时需要选择的所在城市等，而且在执行功能处理方法（@RequestMapping 注解的方法）之前，自动添加到模型对象中，用于视图页面展示时使用")])]),e._v(" "),a("h3",{attrs:{id:"requestbody和-responsebody"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requestbody和-responsebody"}},[e._v("#")]),e._v(" @RequestBody和@ResponseBody")]),e._v(" "),a("p",[e._v("@RequestBody 将请求体读取并序列化为一个Object。\n@ResponseBody 用于将Controller方法返回对的读写，通过适当的HttpMessageConverter\n转换为指定格式后，写到Response 对象的body数据区。")]),e._v(" "),a("h3",{attrs:{id:"requestparam"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#requestparam"}},[e._v("#")]),e._v(" @RequestParam")]),e._v(" "),a("p",[e._v("@RequestParam 将Servlet请求参数绑定到控制器中的方法参数上。")]),e._v(" "),a("ul",[a("li",[a("p",[e._v('语法\n@RequestParam(value="参数名", required="true/false",defaultValue="")')])]),e._v(" "),a("li",[a("p",[e._v("参数\nvalue: 参数名\nrequired：是否包含该参数，默认为true，表示该请求路径中必须包含该参数。\ndefaultValue：默认参数值，如果设置了该值，required=false，如果没有传参，就使用默认值。")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);